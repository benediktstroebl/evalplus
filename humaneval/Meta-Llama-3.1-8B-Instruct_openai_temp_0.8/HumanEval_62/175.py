```python
def derivative(xs: list):
    """
    Compute the derivative of a polynomial.

    The coefficients of the polynomial are given in `xs`, where `xs[i]` is the coefficient of the term
    `x**i`. The derivative of the polynomial `xs[0] + xs[1] * x + xs[2] * x^2 +...` is
    `xs[1] + 2*xs[2]*x + 3*xs[3]*x**2 +...`

    Args:
        xs (list): The coefficients of the polynomial.

    Returns:
        list: The coefficients of the derivative of the polynomial.
    """
    # The derivative of a polynomial involves multiplying each term by its exponent and
    # subtracting one from the exponent. This means that the new exponent will be one less
    # than the original, and the new coefficient will be the original coefficient times the
    # original exponent.
    # We can achieve this by multiplying each element in the list (except the first element)
    # by its index and returning the new list.
    return [i * coeff for i, coeff in enumerate(xs[1:], 1)]

# Test the function
print(derivative([3, 1, 2, 4, 5]))  # Expected output: [1, 4, 12, 20]
print(derivative([1, 2, 3]))  # Expected output: [2, 6]
```

This function uses a list comprehension to create a new list where each element is the product of its index and the corresponding element from the input list, starting from the second element (generated by `enumerate(xs[1:], 1)`). The resulting list is then returned as the derivative of the input polynomial.