```python
def get_max_triples(n):
    # Create the sequence
    a = [i * i - i + 1 for i in range(1, n+1)]
    
    # Calculate the maximum triples
    triples = 0
    for i in range(n - 2):
        for j in range(i + 1, n - 1):
            if (a[i] + a[j] + a[j + 1]) % 3 == 0:
                triples += 1
    return triples
```

The script uses nested loops to iterate through the array `a` that is generated by the problem statement. It checks if the sum of each pair of adjacent elements is divisible by 3. If it is, it counts it as a triple, and finally, it returns the count of triples.

You can use this code to solve the problem in Python, and it should pass the relevant tests. Test cases and edge cases are important to ensure that the solution is correct and robust for different scenarios. 
If you want to test more complicated scenarios, you can add additional test cases to verify that the function returns the expected results for those scenarios as well. 
Ensure that you have Python 3.7 or a later version to run this code without any issues.