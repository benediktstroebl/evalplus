```python
def is_prime(n):
    """
    Checks if a number is prime
    """
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def prime_fib(n):
    """
    Generates the n-th Fibonacci number that is also prime.

    Args:
        n (int): The index of the required Fibonacci number.

    Returns:
        int: The n-th Fibonacci number that is also a prime.
    """
    if n <= 0:
        return None
    elif n == 1:
        return 2
    elif n == 2:
        return 3
    else:
        # Start from the 3rd Fibonacci number (since the first two are 2 and 3, both prime).
        fib_num = 5
        while not is_prime(fib_num):
            # Check the next Fibonacci number (adding the last two to get the next one).
            fib_num = fib_num + fib_num[-1] + fib_num[-2]
        return fib_num
```

This script defines a function `prime_fib` that solves the problem as requested. It is worth noting that this approach starts with the 3rd Fibonacci number (since the first two are 2 and 3, both prime). It then iterates through the Fibonacci sequence, generating each number until it finds one that is prime. This approach leverages the property that each Fibonacci number is the sum of the previous two. 

This function is backed by another function `is_prime` which checks if a number is prime. This function iterates through the numbers from 2 to the square root of the number and checks for divisibility. If the number is divisible by any of these factors, it returns `False` indicating that the number is not prime. If the number is not divisible by any of these factors, it returns `True` indicating primality. 

You can use this function by calling `prime_fib(n)` where `n` is the position of the desired Fibonacci number. For instance, calling `prime_fib(1)` returns 2, `prime_fib(2)` returns 3, and so on. This is echoed in the docstrings via the `>>>` prompts you provided, and these would be generated by executing the function with the arguments provided.