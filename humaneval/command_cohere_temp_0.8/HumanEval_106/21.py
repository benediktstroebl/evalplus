Here is a Python script with a self-contained function that solves the problem and passes corresponding tests:
```python
def f(n):
    list_man = []
    for i in range(1, n+1):
        if i % 2 == 0:
            list_man.append(factorial(i))
        else:
            list_man.append(sum(range(1, i+1)))
    return list_man

def factorial(n):
    if n == 1:
        return 1
    else:
        return n * factorial(n-1)

# Test Cases
print(f(5))
```
This script defines a function `f` that takes an integer `n` as input and creates a list where the element at index `i` is the factorial of `i` if `i` is even, or the sum of numbers from 1 to `i` otherwise. To calculate the factorial of a number, there is a recursive function defined in the script as well that uses the factorial of a number n to be n multiplied by the factorial of n-1. There are no dependencies required for this script and it is self-contained. When you run the script, it will print out the list generated by the `f` function for the test case of n being 5, which will be `[1, 2, 6, 24, 15]` as stated in the example in the prompt.