```python
def int_to_mini_roman(n):
    if n < 1:
        raise ValueError("Input must be a positive integer")

    # Convert the integer to a list of digits. Using reversed to make it in decreasing order
    roman_digits = [i for i in str(n)[::-1] if i != '0' and i != '1']

    # Mini Roman Numeral mapping
    mapping = [
        ('i', 'i'),
        ('v', 'v'),
        ('x', 'x'),
        ('l', 'l'),
        ('c', 'c'),
        ('d', 'cd'),
        ('m', 'cm'),
        ('ii', 'ii'),
        ('vi', 'vi'),
        ('xx', 'xx'),
        ('lx', 'lx'),
        ('xc', 'xc'),
        ('cd', 'cd'),
        ('cm', 'cm'),
        ('viif', 'i'),
        ('viff', 'i'),
        ('xif', 'i'),
        ('lix', 'i'),
        ('lixp', 'i'),
        ('xciv', 'i'),
        ('xcivs', 'i'),
        ('cdxv', 'v'),
        ('cdxx', 'x'),
        ('cdxl', 'l'),
        ('cdcl', 'c'),
        ('cdd', 'cd'),
        ('cdds', 'cd'),
        ('cddm', 'cm'),
        ('cdii', 'ii'),
        ('cdvi', 'vi'),
        ('cdxx', 'xx'),
        ('cdxxp', 'xx'),
        ('cdxl', 'lx'),
        ('cdxlm', 'lx'),
        ('cdxc', 'xc'),
        ('cdxcp', 'xc'),
        ('cdcc', 'cc'),
        ('cddc', 'cd'),
        ('cdmc', 'cm'),
        ('cmm', 'cm'),
        ('cmll', 'cl'),
        ('ccll', 'cl'),
        ('mlii', 'i'),
        ('mllii', 'ii'),
        ('mlli', 'i'),
        ('mllv', 'v'),
        ('mllvi', 'vi'),
        ('mllvii', 'vii'),
        ('mlll', 'l'),
        ('mllc', 'c'),
        ('mll', 'll'),
        ('mcc', 'cc'),
        ('mcd', 'cd'),
        ('mm', 'cm'),
        ('c', 'c'),
        ('cv', 'cv'),
        ('cc', 'cc'),
        ('cxx', 'xx'),
        ('xl', 'l'),
        ('xlm', 'lm'),
        ('xc', 'xc'),
        ('xcp', 'xcp'),
        ('cp', 'cp'),
        ('cxl', 'xl'),
        ('cxp', 'cxp'),
        ('ccl', 'cl'),
        ('ccp', 'ccp'),
        ('cm', 'cm'),
        ('cmd', 'cd'),
        ('cxd', 'xd'),
        ('cxm', 'cxm'),
        ('mmx', 'xx'),
        ('mxx', 'xx'),
        ('mllx', 'lx'),
        ('mllxp', 'lx'),
        ('mlllxp', 'lx'),
        ('mllxc', 'xc'),
        ('mllxcp', 'xc'),
        ('mllcc', 'cc'),
        ('mccp', 'ccp'),
        ('mmcp', 'cp'),
        ('mcm', 'cm'),
        (' CMD', 'cd'),
        (' MCM', 'cm'),