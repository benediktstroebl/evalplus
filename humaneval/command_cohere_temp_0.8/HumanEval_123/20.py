```python
def get_odd_collatz(n):
    odd_seq = [y for y in map(int, str(n)) if y % 2 == 1]
    collatz_seq = [y for y in odd_seq if y != 1]
    return sorted(collatz_seq)
```

The `get_odd_collatz` function takes a positive integer `n` as input and returns a sorted list of odd numbers in the Collatz sequence. Here's a breakdown of how it works:
1. `odd_seq`: This is a preliminary list of odd numbers from the Collatz sequence. It's generated by converting the decimal representation of `n` to an array of integers, then filtering out all odd integers. This ensures that `odd_seq` starts with the input `n`, which is odd, and includes other odd integers in the sequence.
2. `collatz_seq`: The Collatz sequence evolves from the initial odd sequence. It's derived by filtering out the singular element `1` from the `odd_seq`. This step is based on the definition of the Collatz conjecture, where `1` is a terminal (and single) element.
3. Finally, the function returns a sorted list of odd numbers in the Collatz sequence by sorting `collatz_seq`. This sorting ensures the list is returned in ascending order, as specified in the note in the problem statement.