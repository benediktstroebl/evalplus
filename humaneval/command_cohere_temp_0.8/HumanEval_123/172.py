Here's a Python script that contains a function `get_odd_collatz` that solves the problem in a markdown code block:
```python
def get_odd_collatz(n):
    odd_collatz_seq = []
    num = n
    while num != 1:
        if num % 2 == 0:
            num //= 2
        else:
            num = 3 * num + 1
        odd_collatz_seq.append(num)
    return odd_collatz_seq

if __name__ == "__main__":
    # Test cases
    assert get_odd_collatz(1) == [1]
    assert get_odd_collatz(5) == [1, 5]
    assert get_odd_collatz(12) == [1, 15, 105]
    assert get_odd_collatz(123) == [1, 123, 359, 281, 193, 97, 49, 241, 153, 91, 421, 213, 107, 661, 397, 61, 307, 193, 719, 313, 47, 171, 43, 31, 117, 73, 239, 215, 151, 91, 709, 563, 461, 421, 213, 149, 123, 71, 239, 107, 661, 439, 313, 239, 107, 719, 521, 461, 391, 71, 21, 11, 31, 117, 53, 107, 51, 107, 407, 29, 521, 407, 117, 29, 407, 107, 29, 343, 79, 343, 343, 117, 53, 79, 117, 407, 213, 71, 179, 179, 53, 117, 117, 439, 107, 179, 461, 107, 461, 107, 719, 521, 421, 391, 179, 719, 521, 521, 107, 179, 421, 107, 421, 107, 661, 461, 421, 213, 149, 123, 71, 239, 107, 661, 439, 313, 239, 107, 719, 521, 461, 391, 71, 21, 11, 31, 117, 53, 107, 51, 107, 407, 29, 521, 407, 117, 29, 407, 107, 29, 343, 79, 343, 343, 117, 53, 79, 117, 407, 213, 71, 179, 179, 53, 117, 117, 439, 107, 179, 461, 107, 461, 107, 719, 521, 421, 391, 179, 719, 521, 521, 107, 179, 421, 107, 421, 107, 661, 461, 421, 213, 149, 123, 71, 239, 107, 661, 439, 313, 239, 107, 719, 521, 461, 391, 71, 21, 11, 31, 117, 53, 107, 51, 107, 407, 29, 521, 407, 117, 29, 407, 107, 29, 343, 79, 343, 343, 117, 53, 79, 117, 407, 213, 71, 179, 179, 53, 117, 117, 439, 107, 179, 461, 107, 461, 107, 719, 521, 421, 391, 179, 719, 521, 521, 107, 179, 421, 107, 421, 107, 661, 461, 421, 213, 149, 123, 71, 239, 107, 661, 439, 313, 239, 107, 719