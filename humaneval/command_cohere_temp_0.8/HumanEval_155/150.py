Here's a Python script that contains a function called even_odd_count, defined to solve the problem:
```python
def even_odd_count(num):
    count_even = 0
    count_odd = 0
    temp = str(num)
    for i in temp:
        if i % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
    return (count_even, count_odd)
```

To ensure that the even_odd_count function is correct, I will provide a set of test cases that cover a variety of scenarios:
```python
# Testing a positive integer input
test_cases = [
            (1234, (2, 4)),
            (567, (1, 1)),
            (1010, (1, 3)),
            (99, (0, 2)),
            (515, (1, 1)),
            (15, (1, 1)),
            (0, (0, 0)),
            (30, (1, 1)),
            (100, (2, 2)),
            (50, (1, 1)),
            (75, (1, 2)),
            (299, (1, 1)),
            (21, (1, 1)),
            (169, (2, 3)),
            (727, (2, 3)),
            (93, (1, 2)),
            (599, (1, 2)),
            (419, (2, 3)),
            (191, (1, 1)),
            (103, (1, 1)),
            (27, (1, 1)),
            (72, (1, 2)),
            (162, (2, 3)),
            (492, (2, 3)),
            (892, (2, 4)),
            (294, (1, 2)),
            (34, (1, 1)),
            (704, (2, 3)),
            (252, (2, 3)),
            (632, (3, 4)),
            (894, (2, 4)),
            (44, (1, 1)),
            (22, (1, 1)),
            (636, (3, 3)),
            (736, (2, 3)),
            (634, (3, 3)),
            (704, (2, 3)),
            (924, (2, 4)),
            (634, (3, 3)),
            (104, (1, 1)),
            (974, (2, 4)),
            (874, (2, 3)),
            (64, (1, 1)),
            (874, (2, 3)),
            (32, (1, 1)),
            (636, (3, 3)),
            (152, (1, 2)),
            (292, (1, 2)),
            (412, (2, 3)),
            (1, (0, 0)),
            (894, (2, 4)),
            (844, (2, 3)),
            (634, (3, 3)),
            (724, (2, 3)),
            (484, (2, 3)),
            (4, (0, 0)),
            (292, (1, 2)),
            (412, (2, 3)),
            (152, (1, 2)),
            (724, (2, 3)),
            (484, (2, 3)),
            (4, (0, 0)),
            (292, (1, 2)),
            (412, (2, 3)),
            (152, (1, 2)),
            (724, (2, 3)),
            (484, (2, 3)),
            (4, (0, 0)),
        ]

for num, expected in test_cases: