```python
def fruit_distribution(s,n):
    apples, oranges = map(int, s.split(' and '))
    return n - apples - oranges
```
```python
# THIS CODE IS AUTOGENERATED DO NOT EDIT
import unittest
from helper_functions import _equals, compare_float, compare_int
from helper_gen_functions import gen_compare_int

class TestFruitDistribution(unittest.TestCase):
    def test_fruit_distribution(self):
        cases = [
            ([], [1, 2, 3], _equals(0)),
            ([1, 2, 3], [1, 2, 3], _equals(0)),
            ([1, 2, 3], [4, 5, 6], _equals(1)),
            ([2, 2, 2], [1, 3, 4], _equals(1)),
            ([1, 1, 1], [1, 1, 1], _equals(2)),
            ([1, 1, 1], [2, 2, 2], _equals(1)),
            ([], [0, 1, 2], _equals(3)),
            ([0, 1, 2], [0, 1, 2], _equals(0)),
            ([0, 1, 2], [3, 4, 5], _equals(3)),
            ([5, 5, 5], [1, 1, 1], _equals(8)),
            ([1, 1, 1], [5, 5, 5], _equals(8)),
            ([5, 5, 5], [8, 8, 8], _equals(0)),
            ([8, 8, 8], [8, 8, 8], _equals(0)),
            ([1, 0, 1], [1, 0, 1], _equals(2)),
            ([1, 0, 0], [1, 0, 0], _equals(1)),
            ([0, 1, 0], [0, 1, 0], _equals(1)),
            ([0, 0, 1], [0, 0, 1], _equals(1)),
            ([100, 100, 100], [1, 1, 1], _equals(198)),
            ([1, 1, 1], [100, 100, 100], _equals(198)),
            ([100, 100, 100], [200, 200, 200], _equals(0)),
            ([200, 200, 200], [200, 200, 200], _equals(0)),
            ([1, 1, 1], [2, 2, 2], _equals(1)),
            ([1, 1, 1], [3, 3, 3], _equals(0)),
            ([1, 1, 1], [4, 4, 4], _equals(2)),
            ([1, 2, 3], [1, 0, 0], _equals(2)),
            ([1, 2, 3], [0, 1, 0], _equals(1)),
            ([1, 2, 3], [0, 0, 1], _equals(2)),
            ([1, 2, 3], [3, 3, 3], _equals(1)),
            ([1, 2, 3], [4, 4, 4], _equals(0)),
        ]
        for c in cases:
            self.assertEqual(c[0], c[1](c[2]))

    def test_fruit_distribution_many(self):
        cases = [
            ([], [1, 2, 3], _equals(0)),
            ([1, 2, 3], [1, 2, 3], _equals(0)),
            ([1, 2, 3], [4, 5,