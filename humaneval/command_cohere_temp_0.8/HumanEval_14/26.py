```python
from typing import List
from itertools import dropwhile


def all_prefixes(string: str) -> List[str]:
    """ Return list of all prefixes from shortest to longest of the input string """
    return list(reversed(list(dropwhile(lambda s: s != '', string))));
```
The above code reverses the list generated by the `itertools.dropwhile` function to ensure the prefixes are listed from shortest to longest. 
The `dropwhile` function drops elements that are not truthy, a step necessary to remove the input string's prefix until it reaches the first element (the empty string).
This approach saves an explicit loop and the list creation, making the function more efficient in terms of both time and space complexity.