```python
from typing import List
from itertools import dropwhile


def all_prefixes(string: str) -> List[str]:
    """ Return list of all prefixes from shortest to longest of the input string """
    return list(reversed(list(dropwhile(lambda x: x != '', string))));
```
The above code reverses the list generated by the `dropwhile` function so that the prefixes are arranged in the correct order (from shortest to longest).

The `dropwhile` function drops elements from the iterable (`string` in this case) as long as the predicate (`lambda x: x != ''`) returns `True`. Hence, it removes all trailing blanks from the string. Then the reversed list of remaining prefixes (without any leading or trailing blanks) is returned.