```python
from typing import List
from itertools import dropwhile


def all_prefixes(string: str) -> List[str]:
    """ Return list of all prefixes from shortest to longest of the input string """
    return list(reversed(list(dropwhile(lambda s: s != '', string))))}
```
This code reverses the list generated by the `itertools.dropwhile` function, ensuring that the prefixes are sorted in ascending order. 
The `dropwhile` function itself generates a list of substrings from the input string, starting from the first character and including all partial prefixes. The lambda function `lambda s: s != ''` is used as a predicate to continue dropping characters until an empty string is reached, meaning the dropout point will be when the first prefix is reached. 

The solution is typed with `from typing import List` and the function returns a list of strings.